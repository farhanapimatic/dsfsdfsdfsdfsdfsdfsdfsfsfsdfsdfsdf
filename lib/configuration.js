/**
 * BATesterLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const servers = require('./Servers');
const environments = require('./Environments');
const apiHelper = require('./APIHelper');

const environmentsMap = [];

environmentsMap[environments.PRODUCTION] = [];
environmentsMap[environments.TESTING] = [];

environmentsMap[environments.PRODUCTION][servers.MDEFAULT] = 'http://apimatic.hopto.org:{suites}';
environmentsMap[environments.PRODUCTION][servers.AUTH_SERVER] =
    'http://apimaticauth.hopto.org:3000';
environmentsMap[environments.TESTING][servers.MDEFAULT] = 'http://localhost:3000';
environmentsMap[environments.TESTING][servers.AUTH_SERVER] = 'http://apimaticauth.xhopto.org:3000';

const Configuration = {
    // The username to use with basic authentication
    // TODO: Replace the BasicAuthUserName with an appropriate value
    basicAuthUserName: 'TODO: Replace',

    // The password to use with basic authentication
    // TODO: Replace the BasicAuthPassword with an appropriate value
    basicAuthPassword: 'TODO: Replace',

    /**
     * port
     * @type {string}
     */
    port: '80',

    /**
     * suites
     * @type {SuiteCodeEnum}
     */
    suites: 1,

    /**
     * Current API environment
     * @type {string}
     */
    currentEnvironment: environments.PRODUCTION,

    /**
     * Get base URI for a server in the current API environment
     * @param  {string|null} server Server name
     * @return {string}             Base URI for server
     */
    getBaseUri(server) {
        const url = environmentsMap[this.currentEnvironment][server || servers.MDEFAULT];
        const urlParams = {
            port: this.port,
            suites: this.suites,
        };
        return apiHelper.appendUrlWithTemplateParameters(url, urlParams);
    },
};

module.exports = Configuration;
